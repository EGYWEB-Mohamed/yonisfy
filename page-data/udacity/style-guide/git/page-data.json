{"componentChunkName":"component---src-templates-docs-js","path":"/udacity/style-guide/git","result":{"data":{"site":{"siteMetadata":{"title":"Yonisfy","docsLocation":"https://github.com/mohammedelzanaty/yonisfy.git","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"96158702-1884-59bf-a7ba-1b8c0e286d15","title":"Udacity Git Commit Message Style Guide","slug":"/udacity/style-guide/git"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Udacity Git Commit Message Style Guide\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 3\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Commit Messages\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Message Structure\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A commit messages consists of three distinct parts separated by a blank line: the title, an optional body and an optional footer. The layout looks like this:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"type: Subject\\n\\nbody\\n\\nfooter\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The title consists of the type of the message and subject.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"The Type\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The type is contained within the title and can be one of these types:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"feat:\"), \" A new feature\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fix:\"), \" A bug fix\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"docs:\"), \" Changes to documentation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"style:\"), \" Formatting, missing semi colons, etc; no code change\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"refactor:\"), \" Refactoring production code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"test:\"), \" Adding tests, refactoring test; no production code change\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"chore:\"), \" Updating build tasks, package manager configs, etc; no production code change\"))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"The Subject\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Subjects should be no greater than 50 characters, should begin with a capital letter and do not end with a period.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Use an imperative tone to describe what a commit does, rather than what it did. For example, use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"change\"), \"; not changed or changes.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"The Body\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Not all commits are complex enough to warrant a body, therefore it is optional and only used when a commit requires a bit of explanation and context. Use the body to explain the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"what\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"why\"), \" of a commit, not the how.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When writing a body, the blank line between the title and the body is required and you should limit the length of each line to no more than 72 characters.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"The Footer\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The footer is optional and is used to reference issue tracker IDs.\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Example Commit Message\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"feat: Summarize changes in around 50 characters or less\\n\\nMore detailed explanatory text, if necessary. Wrap it to about 72\\ncharacters or so. In some contexts, the first line is treated as the\\nsubject of the commit and the rest of the text as the body. The\\nblank line separating the summary from the body is critical (unless\\nyou omit the body entirely); various tools like `log`, `shortlog`\\nand `rebase` can get confused if you run the two together.\\n\\nExplain the problem that this commit is solving. Focus on why you\\nare making this change as opposed to how (the code explains that).\\nAre there side effects or other unintuitive consequences of this\\nchange? Here's the place to explain them.\\n\\nFurther paragraphs come after blank lines.\\n\\n - Bullet points are okay, too\\n\\n - Typically a hyphen or asterisk is used for the bullet, preceded\\n   by a single space, with blank lines in between, but conventions\\n   vary here\\n\\nIf you use an issue tracker, put references to them at the bottom,\\nlike this:\\n\\nResolves: #123\\nSee also: #456, #789\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#commit-messages","title":"Commit Messages","items":[{"url":"#message-structure","title":"Message Structure"},{"url":"#the-type","title":"The Type"},{"url":"#the-subject","title":"The Subject"},{"url":"#the-body","title":"The Body"},{"url":"#the-footer","title":"The Footer"},{"url":"#example-commit-message","title":"Example Commit Message"}]}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"udacity/style-guide/git.md","fields":null},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"remotes/origin/dependabot/npm_and_yarn/lodash-4.17.21"},"gitCommit":{"hash":"14081146445bc66a45a64169564d243e1ffdeb43","date":"2021-08-30 09:15"}},"pageContext":{"id":"96158702-1884-59bf-a7ba-1b8c0e286d15"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","4106624947","4106624947"]}