{"componentChunkName":"component---src-templates-docs-js","path":"/udacity/FAQ","result":{"data":{"site":{"siteMetadata":{"title":"Yonisfy","docsLocation":"https://github.com/mohammedelzanaty/yonisfy","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"b035bd50-9299-5809-849f-31c61b170226","title":"FAQ","slug":"/udacity/FAQ"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"FAQ\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 4,\n  \"tocDepth\": 3\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Tip = makeShortcode(\"Tip\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"ReactJS\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Redux\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Webpack\"), mdx(Tip, {\n    mdxType: \"Tip\"\n  }, \"All of wepback question created by\", \" \", mdx(\"a\", {\n    href: \"https://www.linkedin.com/in/hossamabubakr/\",\n    target: \"_blank\"\n  }, \"Hossam Abubakr\"), \" \\xA9\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I am getting mismatch errors when I try to install sass-loader for the project?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 Downgrade \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sass-loader\"), \" as it depends on a newer version of webpack using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm install sass-loader@10.0.3\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I am very confused, which API should I use? We have two available.?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728  You will be using the MeaningCloud API.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Which endpoint will I be using? MeaningCloud has a lot!?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://api.meaningcloud.com/sentiment-2.1?key=YOUR_API_KEY&url=YOUR_URL&lang=en\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What exactly do I need to parse into the DOM from the API? There's a lot of data!?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 There are no requirements when it comes to which data to show, so do as much as you like but I suggest, at a bare-minimum showing 3 sentiments.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I am getting the error Cannot find module 'webpack/bin/config-yargs' when I try to build my project?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 The behavior of webpack was changed in version 5 and if you installed the latest version of webpack/webpack CLI it will cause issues with the configuration mentioned in the course in this case all you have to do is to change \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"build-dev\\\": \\\"webpack-dev-server\"), \" To \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"build-dev\\\": \\\"webpack serve \"), \" \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What is the best approach to tackle this project??\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 Follow the videos and work on the sample project until the end of the lessons then you will be able to copy all of that work into the starter project covering 90% of the requirements.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I don't know how to add an event listener to my submit button?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 You can follow the example project you worked on following the videos, it follows the same simple logic, use\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"output: {\\n  libraryTarget: \\\"var\\\",\\n  library: \\\"Client\\\",\\n},\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"to bundle your javascript into a library then referencing it in your HTML as such\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onclick=\\\"return Client.handleSubmit(event)\\\"\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I feel lost and I don't know where to start? I feel overwhelmed!?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 First of all there is no need to worry, you still have plenty of time, for start you should use the starter project provided by Udacity as it will give you a good based to start off\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I am having issues cloning the starter project repo and / or I am not sure which folder is for the starter project?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 The repo is available here and the project you are looking to build on is called evaluate-news-nlp\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I made it far into the project but I am unable to make fetch requests in the server I am getting ReferenceError: fetch is not defined?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 Node doesn\\u2019t support native fetch so you will have to use a package such as node-fetch or axios to make your fetch calls, they are very easy to use and have excellent documentation\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I am getting regeneratorRuntime is not defined error how do I fix this??\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 Add import \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"'babel-polyfill'\"), \" at the top of your jest test file.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I don't understand the difference between development mode and production mode!?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 1.Production mode creates a dist(distribution) folder that contains the optimized version of your website that's ready to be uploaded to your server.\\n2.Development mode runs your website on a node server and allows you to make live changes to your website (without having to rebuild each time)\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\uD83C\\uDFF7\\uFE0F \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I don't know how to switch between development mode and production mode?\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u2728 You create two webpack configuration files for each mode which can be run using\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm run build-prod\"), \" for production mode\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm run build-dev\"), \" for development mode\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"_\", \"_\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#reactjs","title":"ReactJS"},{"url":"#redux","title":"Redux"},{"url":"#webpack","title":"Webpack"}]},"timeToRead":2,"parent":{"__typename":"File","relativePath":"udacity/FAQ.mdx","fields":{"gitLogLatestAuthorName":"mohammedelzanaty","gitLogLatestAuthorEmail":"mohammedelzanaty129@gmail.com","gitLogLatestDate":"7 hours ago"}},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"b4d4e0d291c7cd0780f1095f8bf35e3d1304104a","date":"2021-08-30 10:05"}},"pageContext":{"id":"b035bd50-9299-5809-849f-31c61b170226"}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761","4106624947","4106624947"]}